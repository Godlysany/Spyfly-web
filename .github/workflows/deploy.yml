name: SpyFly Database Sync

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  database-sync:
    name: Sync Supabase Database
    runs-on: ubuntu-latest
    
    steps:
      - name: 🏗 Checkout code
        uses: actions/checkout@v4

      - name: 🗄 Check for Database Changes
        id: check-migration
        run: |
          if [ -f "migrations.sql" ]; then
            echo "✅ Migration file found - will sync database"
            echo "has_migration=true" >> $GITHUB_OUTPUT
          else
            echo "ℹ️ No migration file found - skipping database sync"
            echo "has_migration=false" >> $GITHUB_OUTPUT
          fi

      - name: 🚀 Apply Database Migration
        if: steps.check-migration.outputs.has_migration == 'true'
        run: |
          echo "🗄 Connecting to Supabase database..."
          # Install PostgreSQL client
          sudo apt-get update -q
          sudo apt-get install -y postgresql-client
          
          # Apply migration using DATABASE_URL
          echo "📝 Applying migration to database..."
          psql "${{ secrets.DATABASE_URL }}" -f migrations.sql -v ON_ERROR_STOP=1
          
          echo "✅ Database migration completed successfully!"

      - name: 📦 Archive Migration File
        if: steps.check-migration.outputs.has_migration == 'true'
        run: |
          # Create archive directory
          mkdir -p applied-migrations
          
          # Move migration file with timestamp
          timestamp=$(date +%Y%m%d_%H%M%S)
          mv migrations.sql "applied-migrations/migration-${timestamp}.sql"
          
          # Configure git and commit the archived migration
          git config --global user.name 'SpyFly Database Sync'
          git config --global user.email 'dbsync@spyfly.com'
          git add applied-migrations/
          
          if ! git diff --staged --quiet; then
            git commit -m "📦 Archive database migration ${timestamp}"
            git push origin ${{ github.ref_name }}
            echo "🗃️ Migration archived successfully"
          else
            echo "ℹ️ No changes to archive"
          fi

      - name: 📊 Migration Summary
        if: steps.check-migration.outputs.has_migration == 'true'
        run: |
          echo "## 🗄️ SpyFly Database Migration Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY  
          echo "**✅ Status:** Migration Applied Successfully" >> $GITHUB_STEP_SUMMARY
          echo "**🕒 Time:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "**🗃️ Archive:** Migration moved to applied-migrations/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ℹ️ Railway will auto-deploy your application changes." >> $GITHUB_STEP_SUMMARY

      - name: ℹ️ No Changes
        if: steps.check-migration.outputs.has_migration == 'false'
        run: |
          echo "## ℹ️ No Database Changes" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "No migrations.sql file found - database sync skipped." >> $GITHUB_STEP_SUMMARY
          echo "Railway will still auto-deploy any application changes." >> $GITHUB_STEP_SUMMARY